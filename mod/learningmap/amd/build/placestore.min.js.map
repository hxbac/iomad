{"version":3,"file":"placestore.min.js","sources":["../src/placestore.js"],"sourcesContent":["let placestore = {\n    version: 2021122301,\n    id: 0,\n    places: [],\n    paths: [],\n    startingplaces: [],\n    targetplaces: [],\n    placecolor: '#c01c28',\n    strokecolor: '#ffffff',\n    visitedcolor: '#26a269',\n    height: 100,\n    width: 800,\n    hidepaths: false,\n    mapid: '',\n    usecheckmark: false,\n    editmode: true,\n    /**\n     * Loads attributes from JSON into placestore\n     * @param {*} json\n     */\n    loadJSON: function(json) {\n        try {\n            let fromjson = JSON.parse(json);\n            Object.assign(this, fromjson);\n            // eslint-disable-next-line no-empty\n        } catch { }\n    },\n    /**\n     * Returns placestore as a JSON string ()\n     * @returns {string}\n     */\n    buildJSON: function() {\n        return JSON.stringify(this.getPlacestore());\n    },\n    /**\n     * Adds a place. If it is the only place, it is set as starting place\n     * @param {*} id id of the place\n     * @param {*} linkId id of the corresponding link\n     * @param {*} linkedActivity course module id of linked activity\n     */\n    addPlace: function(id, linkId, linkedActivity = null) {\n        this.places.push({\n            id: id,\n            linkId: linkId,\n            linkedActivity: linkedActivity,\n            placecolor: null,\n            visitedcolor: null\n        });\n        if (this.places.length == 1) {\n            this.addStartingPlace(id);\n        }\n        this.id++;\n    },\n    /**\n     * Removes a place\n     * @param {*} id id of the place\n     */\n    removePlace: function(id) {\n        this.removeStartingPlace(id);\n        this.removeTargetPlace(id);\n        this.places = this.places.filter(\n            function(p) {\n                return p.id != id;\n            }\n        );\n    },\n    /**\n     * Adds a place to the array of starting places\n     * @param {*} id id of the place\n     */\n    addStartingPlace: function(id) {\n        this.startingplaces.push(id);\n    },\n    /**\n     * Removes a place from the array of starting places\n     * @param {*} id id of the place\n     */\n    removeStartingPlace: function(id) {\n        this.startingplaces = this.startingplaces.filter(\n            function(e) {\n                return e != id;\n            }\n        );\n    },\n    /**\n     * Returns whether a place is in the array of starting places\n     * @param {*} id id of the place\n     * @returns {boolean}\n     */\n    isStartingPlace: function(id) {\n        return this.startingplaces.includes(id);\n    },\n    /**\n     * Adds a place to the array of target places\n     * @param {*} id id of the place\n     */\n    addTargetPlace: function(id) {\n        this.targetplaces.push(id);\n    },\n    /**\n     * Removes a place from the array of target places\n     * @param {*} id id of the place\n     */\n    removeTargetPlace: function(id) {\n        this.targetplaces = this.targetplaces.filter(\n            function(e) {\n                return e != id;\n            }\n        );\n    },\n    /**\n     * Returns whether a place is in the array of target places\n     * @param {number} id id of the place\n     * @returns {boolean}\n     */\n    isTargetPlace: function(id) {\n        return this.targetplaces.includes(id);\n    },\n    /**\n     * Adds a path between two places\n     * @param {*} pid id of the path\n     * @param {*} fid id of the first place\n     * @param {*} sid id of the second place\n     */\n    addPath: function(pid, fid, sid) {\n        this.paths.push({\n            id: pid,\n            fid: fid,\n            sid: sid,\n            strokecolor: null,\n            strokedasharray: null,\n            hidepath: null\n        });\n    },\n    /**\n     * Removes a path\n     * @param {*} id id of the place\n     */\n    removePath: function(id) {\n        this.paths = this.paths.filter(\n            function(p) {\n                return p.id != id;\n            }\n        );\n    },\n    /**\n     * Returns an array of paths touching a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getTouchingPaths: function(id) {\n        return this.paths.filter(\n            function(p) {\n                return p.fid == id || p.sid == id;\n            }\n        );\n    },\n    /**\n     * Returns the course module id linked to a place\n     * @param {*} id id of the place\n     * @returns {number} id of the linked course module\n     */\n    getActivityId: function(id) {\n        let place = this.places.filter(\n            function(e) {\n                return id == e.id;\n            }\n        );\n        if (place.length > 0) {\n            return place[0].linkedActivity;\n        } else {\n            return null;\n        }\n    },\n    /**\n     * Sets the id of the linked course module\n     * @param {*} id id of the place\n     * @param {*} linkedActivity course module id\n     */\n    setActivityId: function(id, linkedActivity) {\n        let place = this.places.filter(\n            function(e) {\n                return id == e.id;\n            }\n        );\n        if (place.length > 0) {\n            place[0].linkedActivity = linkedActivity;\n        }\n    },\n    /**\n     * Sets the color of 'stroke', 'place' or 'visited'\n     * @param {*} type type of the color\n     * @param {*} color color in hex format\n     */\n    setColor: function(type, color) {\n        switch (type) {\n            case 'stroke':\n                this.strokecolor = color;\n                break;\n            case 'place':\n                this.placecolor = color;\n                break;\n            case 'visited':\n                this.visitedcolor = color;\n                break;\n        }\n    },\n    /**\n     * Gets the color of 'stroke', 'place' or 'visited'\n     * @param {*} type type of the color\n     * @returns {string} color in hex format\n     */\n    getColor: function(type) {\n        switch (type) {\n            case 'stroke':\n                return this.strokecolor;\n            case 'place':\n                return this.placecolor;\n            case 'visited':\n                return this.visitedcolor;\n        }\n        return null;\n    },\n    /**\n     * Returns the current id\n     * @returns {number}\n     */\n    getId: function() {\n        return this.id;\n    },\n    /**\n     * Sets the dimensions of the background image\n     * @param {*} width\n     * @param {*} height\n     */\n    setBackgroundDimensions: function(width, height) {\n        this.width = width;\n        this.height = height;\n    },\n    /**\n     * Returns all paths starting at a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getPathsWithFid: function(id) {\n        return this.paths.filter(function(p) {\n            return p.fid == id;\n        });\n    },\n    /**\n     * Returns all paths ending at a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getPathsWithSid: function(id) {\n        return this.paths.filter(function(p) {\n            return p.sid == id;\n        });\n    },\n    /**\n     * Returns the attributes of placestore\n     * @returns {object}\n     */\n    getPlacestore: function() {\n        return {\n            id: this.id,\n            places: this.places,\n            paths: this.paths,\n            startingplaces: this.startingplaces,\n            targetplaces: this.targetplaces,\n            placecolor: this.placecolor,\n            strokecolor: this.strokecolor,\n            visitedcolor: this.visitedcolor,\n            height: this.height,\n            width: this.width,\n            hidepaths: this.hidepaths,\n            mapid: this.mapid,\n            usecheckmark: this.usecheckmark,\n            editmode: this.editmode\n        };\n    },\n    /**\n     * Sets hidepaths attribute\n     * @param {boolean} value\n     */\n    setHidePaths: function(value) {\n        this.hidepaths = value;\n    },\n    /**\n     * Returns the value of hidepaths attribute\n     * @returns {boolean}\n     */\n    getHidePaths: function() {\n        return this.hidepaths;\n    },\n    /**\n     * Returns the mapid\n     * @returns {string}\n     */\n    getMapid: function() {\n        return this.mapid;\n    },\n    /**\n     * Returns the value of usecheckmark attribute\n     * @returns {boolean}\n     */\n    getUseCheckmark: function() {\n        return this.usecheckmark;\n    },\n    /**\n     * Sets the value of usecheckmark attribute\n     * @param {boolean} value\n     */\n    setUseCheckmark: function(value) {\n        this.usecheckmark = value;\n    },\n    /**\n     * Returns an array with all activity ids\n     * @returns {array}\n     */\n    getAllActivities: function() {\n        let activities = [];\n        this.places.forEach(function(p) {\n            if (p.linkedActivity) {\n                activities.push(p.linkedActivity);\n            }\n        });\n        return activities;\n    }\n};\n\nexport default placestore;"],"names":["placestore","version","id","places","paths","startingplaces","targetplaces","placecolor","strokecolor","visitedcolor","height","width","hidepaths","mapid","usecheckmark","editmode","loadJSON","json","fromjson","JSON","parse","Object","assign","this","buildJSON","stringify","getPlacestore","addPlace","linkId","linkedActivity","push","length","addStartingPlace","removePlace","removeStartingPlace","removeTargetPlace","filter","p","e","isStartingPlace","includes","addTargetPlace","isTargetPlace","addPath","pid","fid","sid","strokedasharray","hidepath","removePath","getTouchingPaths","getActivityId","place","setActivityId","setColor","type","color","getColor","getId","setBackgroundDimensions","getPathsWithFid","getPathsWithSid","setHidePaths","value","getHidePaths","getMapid","getUseCheckmark","setUseCheckmark","getAllActivities","activities","forEach"],"mappings":"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"}